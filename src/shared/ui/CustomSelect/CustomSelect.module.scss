@use '../../styles/helpers/variables.scss' as *;
@use '../../styles/helpers/functions.scss' as func;

.containerSelect {
  border: func.toRem(1) solid #a0a0a0;
  min-width: func.toRem(247);
  min-height: func.toRem(40);
  font-weight: 500;

  position: relative;
  font-size: func.toRem(16);
  line-height: 1;
  border-radius: 15px;
  cursor: pointer;

  @media (max-width: $m-viewport) {
    border: none;
    padding: 0;

    min-width: initial;
    width: auto;

    display: flex;
    justify-content: flex-end;
  }
}

.lableName {
  position: absolute;
  top: 50%;
  width: calc(100% - 16px);
  transform: translateY(-50%);
  left: 16px;

  @media (max-width: $m-viewport) {
    position: relative;
    left: initial;
    text-align: right;
    transform: translateY(0);
    width: fit-content;
    padding-left: func.toRem(32);
  }
}

.arrow {
  position: absolute;
  right: func.toRem(16);
  width: func.toRem(24);
  height: func.toRem(24);
  top: 50%;
  transform: translateY(-50%) rotate(0deg);
  transition: transform 0.3s ease 0s;

  @media (max-width: $m-viewport) {
    display: none;
  }
}

.arrowsMob {
  position: absolute;
  width: func.toRem(24);
  height: func.toRem(24);
  left: 0;
  top: 0;
  display: none;

  @media (max-width: $m-viewport) {
    display: block;
  }
}

.arrowsMobUp,
.arrowsMobDown {
  width: func.toRem(12);
  height: func.toRem(18);
}

.arrowsMobUp {
  position: absolute;
  left: 0;
  transform: rotate(180deg) scaleY(1);
}

.arrowsMobDown {
  position: absolute;
  left: func.toRem(11);
}

.arrowsMobUp.isMobailArrowRotateDown {
  animation: arrowAnimationUp 0s ease forwards;
}

.arrowsMobDown.isMobailArrowRotateUp {
  animation: arrowAnimationDown 0s ease forwards;
}

.selectedOption {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.menuSelect {
  display: block;
  position: absolute;
  top: func.toRem(39.5);
  width: 100%;
  border-radius: 15px;
  background-color: #ffffff;
  transition: all 0.3s;

  visibility: hidden;
  opacity: 0;
  border: func.toRem(1) solid transparent;
  height: 0;
  transform: scale(0.9);

  @media (max-width: $m-viewport) {
    min-width: 164px;
    right: 0;
    top: func.toRem(28);
  }
}

.optionSelect {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: func.toRem(11.6) func.toRem(16);
  line-height: 1;
  font-weight: inherit;
  width: 100%;

  &:not(:last-child) {
    border-bottom: 1px solid #a0a0a0;
  }

  &:first-child {
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
  }

  &:last-child {
    border-bottom-left-radius: 15px;
    border-bottom-right-radius: 15px;
  }

  &:disabled {
    background-color: #a0a0a072;
    color: rgba(0, 0, 0, 0.473);
  }

  @media (max-width: $m-viewport) {
    white-space: nowrap;
  }
}

.optionSelectedA {
  background-color: #e3e3e3;
}

.open {
  height: func.toRem(120);
  visibility: visible;
  opacity: 1;
  border-color: #a0a0a0;
  transform: scale(1);
}

.isArrowRotate {
  transform: translateY(-50%) rotate(180deg);
}

@keyframes arrowAnimationDown {
  0% {
    transform: rotate(0) scaleY(1);
  }
  50% {
    transform: rotate(0) scaleY(0);
  }
  51% {
    transform: rotate(180deg) scaleY(0);
  }
  100% {
    transform: rotate(180deg) scaleY(1);
  }
}

@keyframes arrowAnimationUp {
  0% {
    transform: rotate(180deg) scaleY(1);
  }
  50% {
    transform: rotate(180deg) scaleY(0);
  }
  51% {
    transform: rotate(0) scaleY(0);
  }
  100% {
    transform: rotate(0) scaleY(1);
  }
}
