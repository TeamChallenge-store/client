@use '../../shared/styles/helpers/variables.scss' as *;
@use '../../shared/styles/helpers/functions.scss' as func;
@use '../../shared/styles/helpers/mixins.scss' as mixin;

.errorContainer {
  max-width: func.toRem(536);
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  margin: auto;

  @media (max-width: $s-viewport) {
    padding: 0 16px;
  }
}

.errorIcon {
  width: func.toRem(48);
  height: func.toRem(48);
}

.error {
  font-weight: 700;
  font-size: func.toRem(48);
  line-height: func.toRem(48);
  padding: func.toRem(18) 0;

   @media (max-width: $s-viewport) {
   padding: func.toRem(24) 0;

  }
}

.errorDesc {
  text-align: center;
  font-weight: 600;
  font-size: func.toRem(32);
  line-height: func.toRem(39);
  text-transform: uppercase;
  padding-bottom: func.toRem(12);

  @media (max-width: $s-viewport) {
    text-align: start;
  padding-bottom: func.toRem(16);

  }
}

.errorSolution {
  color: $gray600;
  font-size: func.toRem(18);
}

.errorBtn {
  max-width: func.toRem(486);
  width: 100%;
  margin-top: func.toRem(32);
  padding: func.toRem(18) func.toRem(32);

  @media (max-width: $s-viewport) {
    display: none;
  }
}
.errorBtnAdaptive {
  display: none;
  max-width: func.toRem(343);
  width: 100%;
  margin-top: func.toRem(32);
  padding: func.toRem(13) func.toRem(42);

  @media (max-width: $s-viewport) {
    display: block;
  }
}
